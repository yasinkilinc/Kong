version: "3.4"

networks:
 kong-net:
  driver: bridge

volumes:
  kong-datastore:

services:

  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: "postgres:${POSTGRE_VERSION}"
    restart: always
    volumes:
      - kong-datastore:/var/lib/postgresql/data
    networks:
      - kong-net
    environment:
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD}
      POSTGRES_USER: kong
      POSTGRES_DB: kong
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: "kong:${KONG_VERSION}"
    command: "kong migrations bootstrap"
    networks:
      - kong-net
    restart: on-failure
    environment:
      KONG_PG_HOST: kong-database
      KONG_DATABASE: postgres
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}
    links:
      - kong-database
    depends_on:
      - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: "revomatico/docker-kong-oidc:${KONG_VERSION}"
    restart: always
    networks:
      - kong-net
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=${KONG_PG_PASSWORD}
      - KONG_PROXY_LISTEN=0.0.0.0:8000
      - KONG_PROXY_LISTEN_SSL=0.0.0.0:8443
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_PLUGINS=oidc,oauth2,jwt
      - KONG_LOG_LEVEL=debug
    depends_on:
      - kong-migration
      - kong-database
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 5s
      timeout: 2s
      retries: 15
    ports:
      - "8000:8000" # Listener
      - "8001:8001" # Admin API
      - "8443:8443" # Listener  (SSL)
      - "8444:8444" # Admin API (SSL)

  #######################################
  # Konga database prepare
  #######################################
  konga-prepare:
    image: "pantsel/konga:${KONGA_VERSION}"
    command: "-c prepare -a postgres -u postgresql://kong:${KONG_PG_PASSWORD}@kong-database:5432/konga_db"
    volumes:
      - kong-datastore:/app/kongadata
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: ${KONG_PG_PASSWORD}
    networks:
      - kong-net
    restart: on-failure
    links:
      - kong-database
    depends_on:
      - kong-database

  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: "pantsel/konga:${KONGA_VERSION}"
    restart: always
    volumes:
      - kong-datastore:/app/kongadata
    networks:
        - kong-net
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: ${KONG_PG_PASSWORD}
      TOKEN_SECRET: km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb
      DB_DATABASE: konga_db
      NODE_ENV: production
    depends_on:
      - kong-database
    ports:
      - "1337:1337"

  #######################################
  # Keycloak
  #######################################
  keycloak:
    image: "jboss/keycloak:${KEYCLOAK_VERSION}"
    container_name: "keycloak"
    networks:
      - kong-net
    depends_on:
      - kong-database
    environment:
      DB_VENDOR:   POSTGRES
      DB_ADDR:     kong-database
      DB_PORT:     5432
      DB_DATABASE: kong
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: ${KONG_PG_PASSWORD}
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    ports:
      - "8080:8080"  

  